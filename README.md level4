Level4 Project
다중 카테고리 메뉴를 지원하는 키오스크 프로그램의 네 번째 버전입니다. 사용자가 메뉴를 선택하고 선택한 메뉴의 정보를 출력합니다.

목차
소개

설치

사용법


라이센스

문의

소개
이 프로젝트는 Shake Shack의 다중 카테고리 메뉴를 시뮬레이션하는 키오스크 프로그램의 네 번째 버전입니다. 사용자는 메인 메뉴에서 카테고리를 선택하고, 선택한 카테고리의 메뉴 아이템을 선택하여 정보를 출력합니다.

설치
프로젝트를 설치하고 실행하는 방법은 다음과 같습니다.

bash
$ git clone https://github.com/wjdgus2319/YJH-project-file.git
$ cd YJH-project-file
$ javac com/example/level4/*.java
사용법
프로그램을 실행하려면 다음 명령어를 입력하세요.

bash
$ java com.example.level4.Kiosk

라이센스
이 프로젝트는 MIT 라이센스를 따릅니다.

구현한 상황 
레벨 4에서는 다중 카테고리 메뉴를 지원하도록 프로그램을 확장했습니다. 사용자가 카테고리를 선택하고, 해당 카테고리 내의 메뉴 아이템을 선택할 수 있습니다.
package com.example.level4;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Kiosk {
    private List<Menu> menus;

    public Kiosk(List<Menu> menus) {
        this.menus = menus;
    }

    public List<Menu> getMenus() {
        return menus;
    }

    public void setMenus(List<Menu> menus) {
        this.menus = menus;
    }

    public void start() {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("[ MAIN MENU ]");
            for (int i = 0; i < menus.size(); i++) {
                System.out.println((i + 1) + ". " + menus.get(i).getCategoryName());
            }
            System.out.println("0. 종료");

            int choice = scanner.nextInt();
            if (choice == 0) {
                System.out.println("프로그램을 종료합니다.");
                break;
            } else if (choice > 0 && choice <= menus.size()) {
                Menu selectedMenu = menus.get(choice - 1);
                System.out.println("[ " + selectedMenu.getCategoryName().toUpperCase() + " MENU ]");
                selectedMenu.displayMenuItems();
                System.out.println("0. 뒤로가기");

                int itemChoice = scanner.nextInt();
                if (itemChoice == 0) {
                    continue;  // 메인 메뉴로 돌아가기
                } else if (itemChoice > 0 && itemChoice <= selectedMenu.getMenuItems().size()) {
                    MenuItem selectedItem = selectedMenu.getMenuItems().get(itemChoice - 1);
                    System.out.println("선택한 메뉴: " + selectedItem);
                } else {
                    System.out.println("잘못된 입력입니다. 다시 시도해주세요.");
                }
            }
        }
        scanner.close();
    }

    public static void main(String[] args) {
        Menu burgerMenu = new Menu("Burgers");
        burgerMenu.addMenuItem(new MenuItem("ShackBurger", 6.9, "토마토, 양상추, 쉑소스가 포함된 버거"));
        burgerMenu.addMenuItem(new MenuItem("SmokeShack", 8.9, "베이컨, 체리 페퍼에 쉑소스가 포함된 버거"));
        burgerMenu.addMenuItem(new MenuItem("Cheeseburger", 6.9, "포테이토 번과 비프패티, 치즈가 포함된 버거"));
        burgerMenu.addMenuItem(new MenuItem("Hamburger", 5.4, "비프패티를 기반으로 야채가 들어간 기본 버거"));

        Menu drinksMenu = new Menu("Drinks");
        drinksMenu.addMenuItem(new MenuItem("Coke", 2.0, "탄산이 강한 콜라"));
        drinksMenu.addMenuItem(new MenuItem("Diet Coke", 2.0, "칼로리를 줄인 콜라"));
        drinksMenu.addMenuItem(new MenuItem("Water", 1.0, "생수"));

        Menu dessertsMenu = new Menu("Desserts");
        dessertsMenu.addMenuItem(new MenuItem("Ice Cream", 3.5, "바닐라 아이스크림"));
        dessertsMenu.addMenuItem(new MenuItem("Brownie", 4.0, "진한 초코 브라우니"));

        List<Menu> menus = new ArrayList<>();
        menus.add(burgerMenu);
        menus.add(drinksMenu);
        menus.add(dessertsMenu);

        Kiosk kiosk = new Kiosk(menus);
        kiosk.start();
    }
}

package com.example.level4;

import java.util.ArrayList;
import java.util.List;

public class Menu {
    private String categoryName;
    private List<MenuItem> menuItems;

    public Menu(String categoryName) {
        this.categoryName = categoryName;
        this.menuItems = new ArrayList<>();
    }

    public String getCategoryName() {
        return categoryName;
    }

    public void setCategoryName(String categoryName) {
        this.categoryName = categoryName;
    }

    public List<MenuItem> getMenuItems() {
        return menuItems;
    }

    public void addMenuItem(MenuItem menuItem) {
        menuItems.add(menuItem);
    }

    public void displayMenuItems() {
        for (int i = 0; i < menuItems.size(); i++) {
            System.out.println((i + 1) + ". " + menuItems.get(i));
        }
    }
}

package com.example.level4;

public class MenuItem {
    private String name;
    private double price;
    private String description;

    public MenuItem(String name, double price, String description) {
        this.name = name;
        this.price = price;
        this.description = description;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Override
    public String toString() {
        return String.format("%s | W %.1f | %s", name, price, description);
    }
}





